openapi: 3.0.1
info:
  title: Azure DevOps Plugin API for Krateo Operator Generator (KOG)
  description: Simple wrapper around Azure DevOps API to provide consisentency of API response for Krateo Operator Generator (KOG)
  termsOfService: http://swagger.io/terms/
  contact:
    name: Krateo Support
    url: https://krateo.io
    email: contact@krateoplatformops.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: "1.0"
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
servers:
  - url: http://localhost:8080/
paths:
  /api/{organization}/{projectId}/git/repositories:
    post:
      summary: Create a new GitRepository on Azure DevOps
      description: Create a new GitRepository on Azure DevOps using the provided organization, project, and repository details.
      operationId: post-gitrepository
      parameters:
        - name: organization
          in: path
          description: Organization name
          required: true
          schema:
            type: string
        - name: projectId
          in: path
          description: Project ID or name
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          description: API version (e.g., 7.2-preview.2)
          required: true
          schema:
            type: string
        - name: sourceRef
          in: query
          description: Specify the source refs to use while creating a fork repo
          schema:
            type: string
        - name: Authorization
          in: header
          description: Basic Auth header (Basic <base64-encoded-username:password>)
          required: true
          schema:
            type: string
      requestBody:
        description: GitRepository creation request body (with additional fields handled by the plugin)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gitrepository.CreateRepositoryRequest'
        required: true
      responses:
        "201":
          description: GitRepository details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gitrepository.CreateRepositoryResponse'
        "202":
          description: GitRepository details (repo created but creation of branch deisgnated as default branch is pending, user must create it, then the gitrepository-controller will update the default branch later)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gitrepository.CreateRepositoryResponse'
      x-codegen-request-body-name: gitrepositoryCreate
  /api/{organization}/{project}/pipelines/:
    post:
      summary: Create a new Pipeline
      description: Create a new Pipeline
      operationId: post-pipeline
      parameters:
        - name: organization
          in: path
          description: Organization name
          required: true
          schema:
            type: string
        - name: projectId
          in: path
          description: Project ID or name
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          description: API version (e.g., 7.2-preview.1)
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Basic Auth header (Basic <base64-encoded-username:password>)
          required: true
          schema:
            type: string
      requestBody:
        description: Pipeline creation request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pipeline.CreatePipelineRequest'
        required: true
      responses:
        "201":
          description: Pipeline details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pipeline.CreatePipelineResponse'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: pipelineCreate
  /api/{organization}/{project}/pipelines/pipelinepermissions/{resourceType}/{resourceId}:
    get:
      summary: Get the pipeline permission of a resource
      description: Get
      operationId: get-pipelinepermission
      parameters:
        - name: organization
          in: path
          description: Organization name
          required: true
          schema:
            type: string
        - name: project
          in: path
          description: Project name
          required: true
          schema:
            type: string
        - name: resourceType
          in: path
          description: Resource type (e.g., pipelines, repositories)
          required: true
          schema:
            type: string
        - name: resourceId
          in: path
          description: Resource ID (e.g., pipeline ID, repository ID)
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          description: API version (e.g., 7.2-preview.1)
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Basic Auth header (Basic <base64-encoded-username:password>)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Pipeline permission details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pipelinepermission.ResourcePipelinePermissions'
  /api/{organization}/{project}/pipelines/{id}:
    get:
      summary: Get a pipeline
      description: Get
      operationId: get-pipeline
      parameters:
        - name: organization
          in: path
          description: Organization name
          required: true
          schema:
            type: string
        - name: project
          in: path
          description: Project name or ID
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Pipeline ID
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          description: API version (e.g., 7.2-preview.1)
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Basic Auth header (Basic <base64-encoded-username:password>)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Pipeline details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pipeline.GetPipelineResponse'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal Server Error
          content: {}
    put:
      summary: Update a pipeline
      description: Update a pipeline using build definitions endpoint
      operationId: put-pipeline
      parameters:
        - name: organization
          in: path
          description: Organization name
          required: true
          schema:
            type: string
        - name: project
          in: path
          description: Project name or ID
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Pipeline ID
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          description: API version (e.g., 7.2-preview.1)
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Basic Auth header (Basic <base64-encoded-username:password>)
          required: true
          schema:
            type: string
      requestBody:
        description: Pipeline update request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pipeline.UpdatePipelineRequest'
        required: true
      responses:
        "200":
          description: Updated pipeline details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pipeline.UpdatePipelineResponse'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: pipelineUpdate
    delete:
      summary: Delete a pipeline
      description: Delete a pipeline using build definitions endpoint
      operationId: delete-pipeline
      parameters:
        - name: organization
          in: path
          description: Organization name
          required: true
          schema:
            type: string
        - name: project
          in: path
          description: Project name or ID
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Pipeline ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Basic Auth header (Basic <base64-encoded-username:password>)
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content - Pipeline deleted successfully
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
components:
  schemas:
    gitrepository.AzureDevOpsTime:
      type: object
      properties:
        time.Time:
          type: string
    gitrepository.CreateRepositoryRequest:
      type: object
      properties:
        defaultBranch:
          type: string
        initialize:
          type: boolean
          description: Indicates if the repository should be initialized with an initial commit
        name:
          type: string
        parentRepository:
          $ref: '#/components/schemas/gitrepository.GitRepositoryRefMinimal'
        project:
          $ref: '#/components/schemas/gitrepository.TeamProjectReferenceMinimal'
    gitrepository.CreateRepositoryResponse:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/gitrepository.ReferenceLinks'
        creationDate:
          $ref: '#/components/schemas/gitrepository.AzureDevOpsTime'
        defaultBranch:
          type: string
        id:
          type: string
        isDisabled:
          type: boolean
        isFork:
          type: boolean
        isInMaintenance:
          type: boolean
        name:
          type: string
        parentRepository:
          $ref: '#/components/schemas/gitrepository.GitRepositoryRef'
        project:
          $ref: '#/components/schemas/gitrepository.TeamProjectReference'
        remoteUrl:
          type: string
        size:
          type: integer
        sshUrl:
          type: string
        url:
          type: string
        validRemoteUrls:
          type: array
          items:
            type: string
        webUrl:
          type: string
    gitrepository.GitRepositoryRef:
      type: object
      properties:
        collection:
          $ref: '#/components/schemas/gitrepository.TeamProjectCollectionReference'
        id:
          type: string
        isFork:
          type: boolean
        name:
          type: string
        project:
          $ref: '#/components/schemas/gitrepository.TeamProjectReference'
        remoteUrl:
          type: string
        sshUrl:
          type: string
        url:
          type: string
    gitrepository.GitRepositoryRefMinimal:
      type: object
      properties:
        id:
          type: string
        project:
          $ref: '#/components/schemas/gitrepository.TeamProjectReferenceMinimal'
    gitrepository.ProjectState:
      type: string
      enum:
        - deleting
        - new
        - wellFormed
        - createPending
        - all
        - unchanged
        - deleted
      x-enum-varnames:
        - ProjectStateDeleting
        - ProjectStateNew
        - ProjectStateWellFormed
        - ProjectStateCreatePending
        - ProjectStateAll
        - ProjectStateUnchanged
        - ProjectStateDeleted
    gitrepository.ProjectVisibility:
      type: string
      enum:
        - private
        - public
      x-enum-varnames:
        - ProjectVisibilityPrivate
        - ProjectVisibilityPublic
    gitrepository.ReferenceLinks:
      type: object
      properties:
        links:
          type: object
          additionalProperties: true
    gitrepository.TeamProjectCollectionReference:
      type: object
      properties:
        avatarUrl:
          type: string
        id:
          type: string
        name:
          type: string
        url:
          type: string
    gitrepository.TeamProjectReference:
      type: object
      properties:
        abbreviation:
          type: string
        defaultTeamImageUrl:
          type: string
        description:
          type: string
        id:
          type: string
        lastUpdateTime:
          $ref: '#/components/schemas/gitrepository.AzureDevOpsTime'
        name:
          type: string
        revision:
          type: integer
        state:
          $ref: '#/components/schemas/gitrepository.ProjectState'
        url:
          type: string
        visibility:
          $ref: '#/components/schemas/gitrepository.ProjectVisibility'
    gitrepository.TeamProjectReferenceMinimal:
      type: object
      properties:
        id:
          type: string
    pipeline.Build:
      type: object
      properties:
        buildNumber:
          type: string
        finishTime:
          type: string
        id:
          type: integer
        queueTime:
          type: string
        result:
          type: string
        startTime:
          type: string
        status:
          type: string
        uri:
          type: string
        url:
          type: string
    pipeline.BuildDefinitionReference:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        path:
          type: string
        project:
          $ref: '#/components/schemas/pipeline.ProjectReference'
        type:
          type: string
        uri:
          type: string
        url:
          type: string
    pipeline.BuildDefinitionVariable:
      type: object
      properties:
        allowOverride:
          type: boolean
        isSecret:
          type: boolean
        value:
          type: string
    pipeline.BuildMetric:
      type: object
      properties:
        name:
          type: string
        scope:
          type: string
        value:
          type: object
    pipeline.BuildRepository:
      type: object
      properties:
        id:
          type: string
          description: Required
        type:
          type: string
          description: 'Required - enum: unknown, gitHub, azureReposGit, azureReposGitHyphenated'
    pipeline.CreatePipelineConfigurationParametersComplete:
      type: object
      properties:
        path:
          type: string
        repository:
          type: object
          description: Required
          allOf:
            - $ref: '#/components/schemas/pipeline.BuildRepository'
        type:
          type: string
          description: 'Required - enum: unknown, yaml, designerJson, justInTime, designerHyphenJson'
    pipeline.CreatePipelineRequest:
      type: object
      properties:
        configuration:
          type: object
          description: Required
          allOf:
            - $ref: '#/components/schemas/pipeline.CreatePipelineConfigurationParametersComplete'
        folder:
          type: string
        name:
          type: string
          description: Required
    pipeline.CreatePipelineResponse:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/pipeline.ReferenceLinks'
        configuration:
          $ref: '#/components/schemas/pipeline.PipelineConfiguration'
        folder:
          type: string
          description: Embedded fields from PipelineBase
        id:
          type: integer
        name:
          type: string
        revision:
          type: integer
        url:
          type: string
    pipeline.GetPipelineResponse:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/pipeline.ReferenceLinks'
        configuration:
          $ref: '#/components/schemas/pipeline.PipelineConfiguration'
        folder:
          type: string
          description: Embedded fields from PipelineBase
        id:
          type: integer
        name:
          type: string
        revision:
          type: integer
        url:
          type: string
    pipeline.PipelineConfiguration:
      type: object
      properties:
        type:
          type: string
          description: 'enum: unknown, yaml, designerJson, justInTime, designerHyphenJson'
    pipeline.ProcessParameterInput:
      type: object
      properties:
        defaultValue:
          type: string
        helpMarkDown:
          type: string
        label:
          type: string
        name:
          type: string
        properties:
          type: object
          additionalProperties: true
        required:
          type: boolean
        type:
          type: string
        visibleRule:
          type: string
    pipeline.ProcessParameters:
      type: object
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/pipeline.ProcessParameterInput'
    pipeline.ProjectReference:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        lastUpdateTime:
          type: string
        name:
          type: string
        revision:
          type: integer
        state:
          type: string
        url:
          type: string
        visibility:
          type: string
    pipeline.ReferenceLinks:
      type: object
      properties:
        links:
          type: object
          additionalProperties: true
    pipeline.UpdatePipelineRequest:
      type: object
      properties:
        badgeEnabled:
          type: boolean
        buildNumberFormat:
          type: string
        comment:
          type: string
        id:
          type: integer
        name:
          type: string
          description: Required
        path:
          type: string
        process:
          type: object
        processParameters:
          $ref: '#/components/schemas/pipeline.ProcessParameters'
        properties:
          type: object
          additionalProperties: true
        quality:
          type: string
        repository:
          $ref: '#/components/schemas/pipeline.BuildRepository'
        revision:
          type: integer
        tags:
          type: array
          items:
            type: string
        type:
          type: string
        variableGroups:
          type: array
          items:
            $ref: '#/components/schemas/pipeline.VariableGroup'
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/pipeline.BuildDefinitionVariable'
    pipeline.UpdatePipelineResponse:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/pipeline.ReferenceLinks'
        badgeEnabled:
          type: boolean
        buildNumberFormat:
          type: string
        comment:
          type: string
        createdDate:
          type: string
        dateCreated:
          type: string
        draftOf:
          $ref: '#/components/schemas/pipeline.BuildDefinitionReference'
        drafts:
          type: array
          items:
            $ref: '#/components/schemas/pipeline.BuildDefinitionReference'
        dropLocation:
          type: string
        id:
          type: integer
        jobAuthorizationScope:
          type: string
        jobCancelTimeoutInMinutes:
          type: integer
        jobTimeoutInMinutes:
          type: integer
        latestBuild:
          $ref: '#/components/schemas/pipeline.Build'
        latestCompletedBuild:
          $ref: '#/components/schemas/pipeline.Build'
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/pipeline.BuildMetric'
        name:
          type: string
        path:
          type: string
        process:
          type: object
        processParameters:
          $ref: '#/components/schemas/pipeline.ProcessParameters'
        project:
          $ref: '#/components/schemas/pipeline.ProjectReference'
        properties:
          type: object
          additionalProperties: true
        quality:
          type: string
        repository:
          $ref: '#/components/schemas/pipeline.BuildRepository'
        revision:
          type: integer
        tags:
          type: array
          items:
            type: string
        type:
          type: string
        uri:
          type: string
        url:
          type: string
        variableGroups:
          type: array
          items:
            $ref: '#/components/schemas/pipeline.VariableGroup'
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/pipeline.BuildDefinitionVariable'
    pipeline.Variable:
      type: object
      properties:
        allowOverride:
          type: boolean
        isSecret:
          type: boolean
        value:
          type: string
    pipeline.VariableGroup:
      type: object
      properties:
        description:
          type: string
        id:
          type: integer
        name:
          type: string
        type:
          type: string
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/pipeline.Variable'
    pipelinepermission.IdentityRef:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/pipelinepermission.ReferenceLinks'
        descriptor:
          type: string
        directoryAlias:
          type: string
        displayName:
          type: string
        id:
          type: string
        imageUrl:
          type: string
        inactive:
          type: boolean
        isAadIdentity:
          type: boolean
        isContainer:
          type: boolean
        isDeletedInOrigin:
          type: boolean
        profileUrl:
          type: string
        uniqueName:
          type: string
        url:
          type: string
    pipelinepermission.Permission:
      type: object
      properties:
        authorized:
          type: boolean
        authorizedBy:
          $ref: '#/components/schemas/pipelinepermission.IdentityRef'
        authorizedOn:
          type: string
    pipelinepermission.PipelinePermission:
      type: object
      properties:
        authorized:
          type: boolean
        authorizedBy:
          $ref: '#/components/schemas/pipelinepermission.IdentityRef'
        authorizedOn:
          type: string
        id:
          type: integer
    pipelinepermission.ReferenceLinks:
      type: object
      properties:
        links:
          type: object
          additionalProperties: true
    pipelinepermission.Resource:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
    pipelinepermission.ResourcePipelinePermissions:
      type: object
      properties:
        allPipelines:
          $ref: '#/components/schemas/pipelinepermission.Permission'
        pipelines:
          type: array
          items:
            $ref: '#/components/schemas/pipelinepermission.PipelinePermission'
        resource:
          $ref: '#/components/schemas/pipelinepermission.Resource'
  securitySchemes:
    Bearer:
      type: http
      scheme: basic
x-original-swagger-version: "2.0"
