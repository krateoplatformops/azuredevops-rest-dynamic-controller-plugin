basePath: /
definitions:
  gitrepository.CreateRepositoryRequest:
    properties:
      defaultBranch:
        type: string
      name:
        type: string
      parentRepository:
        $ref: '#/definitions/gitrepository.GitRepositoryRefMinimal'
      project:
        $ref: '#/definitions/gitrepository.TeamProjectReferenceMinimal'
    type: object
  gitrepository.CreateRepositoryResponse:
    properties:
      name:
        type: string
      parentRepository:
        $ref: '#/definitions/gitrepository.GitRepositoryRef'
      project:
        $ref: '#/definitions/gitrepository.TeamProjectReference'
    type: object
  gitrepository.GitRepositoryRef:
    properties:
      collection:
        $ref: '#/definitions/gitrepository.TeamProjectCollectionReference'
      id:
        type: string
      isFork:
        type: boolean
      name:
        type: string
      project:
        $ref: '#/definitions/gitrepository.TeamProjectReference'
      remoteUrl:
        type: string
      sshUrl:
        type: string
      url:
        type: string
    type: object
  gitrepository.GitRepositoryRefMinimal:
    properties:
      id:
        type: string
      project:
        $ref: '#/definitions/gitrepository.TeamProjectReferenceMinimal'
    type: object
  gitrepository.ProjectState:
    enum:
    - deleting
    - new
    - wellFormed
    - createPending
    - all
    - unchanged
    - deleted
    type: string
    x-enum-varnames:
    - ProjectStateDeleting
    - ProjectStateNew
    - ProjectStateWellFormed
    - ProjectStateCreatePending
    - ProjectStateAll
    - ProjectStateUnchanged
    - ProjectStateDeleted
  gitrepository.ProjectVisibility:
    enum:
    - private
    - public
    type: string
    x-enum-varnames:
    - ProjectVisibilityPrivate
    - ProjectVisibilityPublic
  gitrepository.TeamProjectCollectionReference:
    properties:
      avatarUrl:
        type: string
      id:
        type: string
      name:
        type: string
      url:
        type: string
    type: object
  gitrepository.TeamProjectReference:
    properties:
      abbreviation:
        type: string
      defaultTeamImageUrl:
        type: string
      description:
        type: string
      id:
        type: string
      lastUpdateTime:
        type: string
      name:
        type: string
      revision:
        type: integer
      state:
        $ref: '#/definitions/gitrepository.ProjectState'
      url:
        type: string
      visibility:
        $ref: '#/definitions/gitrepository.ProjectVisibility'
    type: object
  gitrepository.TeamProjectReferenceMinimal:
    properties:
      id:
        type: string
    type: object
  pipelinepermission.IdentityRef:
    properties:
      _links:
        $ref: '#/definitions/pipelinepermission.ReferenceLinks'
      descriptor:
        type: string
      directoryAlias:
        type: string
      displayName:
        type: string
      id:
        type: string
      imageUrl:
        type: string
      inactive:
        type: boolean
      isAadIdentity:
        type: boolean
      isContainer:
        type: boolean
      isDeletedInOrigin:
        type: boolean
      profileUrl:
        type: string
      uniqueName:
        type: string
      url:
        type: string
    type: object
  pipelinepermission.Permission:
    properties:
      authorized:
        type: boolean
      authorizedBy:
        $ref: '#/definitions/pipelinepermission.IdentityRef'
      authorizedOn:
        type: string
    type: object
  pipelinepermission.PipelinePermission:
    properties:
      authorized:
        type: boolean
      authorizedBy:
        $ref: '#/definitions/pipelinepermission.IdentityRef'
      authorizedOn:
        type: string
      id:
        type: integer
    type: object
  pipelinepermission.ReferenceLinks:
    properties:
      links:
        additionalProperties: true
        type: object
    type: object
  pipelinepermission.Resource:
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  pipelinepermission.ResourcePipelinePermissions:
    properties:
      allPipelines:
        $ref: '#/definitions/pipelinepermission.Permission'
      pipelines:
        items:
          $ref: '#/definitions/pipelinepermission.PipelinePermission'
        type: array
      resource:
        $ref: '#/definitions/pipelinepermission.Resource'
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: contact@krateoplatformops.io
    name: Krateo Support
    url: https://krateo.io
  description: Simple wrapper around Azure DevOps API to provide consisentency of
    API response for Krateo Operator Generator (KOG)
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Azure DevOps Plugin API for Krateo Operator Generator (KOG)
  version: "1.0"
paths:
  /api/{organization}/{project}/pipelines/pipelinepermissions/{resourceType}/{resourceId}:
    get:
      description: Get
      operationId: get-pipelinepermission
      parameters:
      - description: Organization name
        in: path
        name: organization
        required: true
        type: string
      - description: Project name
        in: path
        name: project
        required: true
        type: string
      - description: Resource type (e.g., pipelines, repositories)
        in: path
        name: resourceType
        required: true
        type: string
      - description: Resource ID (e.g., pipeline ID, repository ID)
        in: path
        name: resourceId
        required: true
        type: string
      - description: API version (e.g., 7.2-preview.1)
        in: query
        name: api-version
        required: true
        type: string
      - description: Basic Auth header (Basic <base64-encoded-username:password>)
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Pipeline permission details
          schema:
            $ref: '#/definitions/pipelinepermission.ResourcePipelinePermissions'
      summary: Get the pipeline permission of a resource
  /api/{organization}/{projectId}/git/repositories:
    post:
      consumes:
      - application/json
      description: Create a new GitRepository on Azure DevOps using the provided organization,
        project, and repository details.
      operationId: post-gitrepository
      parameters:
      - description: Organization name
        in: path
        name: organization
        required: true
        type: string
      - description: Project ID or name
        in: path
        name: projectId
        required: true
        type: string
      - description: Specify the source refs to use while creating a fork repo
        in: path
        name: sourceRef
        type: string
      - description: API version (e.g., 7.2-preview.2)
        in: query
        name: api-version
        required: true
        type: string
      - description: Basic Auth header (Basic <base64-encoded-username:password>)
        in: header
        name: Authorization
        required: true
        type: string
      - description: GitRepository creation request body (with additional fields handled
          by the plugin)
        in: body
        name: gitrepositoryCreate
        required: true
        schema:
          $ref: '#/definitions/gitrepository.CreateRepositoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: GitRepository details
          schema:
            $ref: '#/definitions/gitrepository.CreateRepositoryResponse'
      summary: Create a new GitRepository on Azure DevOps
schemes:
- http
securityDefinitions:
  Bearer:
    type: basic
swagger: "2.0"
