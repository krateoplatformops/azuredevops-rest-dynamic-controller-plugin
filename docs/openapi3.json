{
  "openapi": "3.0.1",
  "info": {
    "title": "Azure DevOps Plugin API for Krateo Operator Generator (KOG)",
    "description": "Simple wrapper around Azure DevOps API to provide consisentency of API response for Krateo Operator Generator (KOG)",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Krateo Support",
      "url": "https://krateo.io",
      "email": "contact@krateoplatformops.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0"
  },
  "externalDocs": {
    "description": "OpenAPI",
    "url": "https://swagger.io/resources/open-api/"
  },
  "servers": [
    {
      "url": "http://localhost:8080/"
    }
  ],
  "paths": {
    "/api/{organization}/{projectId}/git/repositories": {
      "post": {
        "summary": "Create a new GitRepository on Azure DevOps",
        "description": "Create a new GitRepository on Azure DevOps using the provided organization, project, and repository details.",
        "operationId": "post-gitrepository",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "Organization name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID or name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API version (e.g., 7.2-preview.2)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceRef",
            "in": "query",
            "description": "Specify the source refs to use while creating a fork repo",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Basic Auth header (Basic <base64-encoded-username:password>)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "GitRepository creation request body (with additional fields handled by the plugin)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/gitrepository.CreateRepositoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "GitRepository details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gitrepository.CreateRepositoryResponse"
                }
              }
            }
          },
          "202": {
            "description": "GitRepository details (repo created but creation of branch deisgnated as default branch is pending, user must create it, then the gitrepository-controller will update the default branch later)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gitrepository.CreateRepositoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "gitrepositoryCreate"
      }
    },
    "/api/{organization}/{project}/git/repositories/{repositoryId}/pullrequests": {
      "get": {
        "summary": "Get pull requests (list)",
        "description": "Retrieve all pull requests matching a specified criteria.",
        "operationId": "get-pullrequests",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "Organization name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project name or ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repositoryId",
            "in": "path",
            "description": "Repository ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceRefName",
            "in": "query",
            "description": "Search for pull requests from this branch.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetRefName",
            "in": "query",
            "description": "Search for pull requests into this branch.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "Search pull requests that contain the specified text in the title.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API version (e.g., 7.2-preview.2)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Basic Auth header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of pull requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/pullrequest.GitPullRequest"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/{organization}/{project}/git/repositories/{repositoryId}/pullrequests/{pullRequestId}": {
      "patch": {
        "summary": "Update a pull request",
        "description": "Update an existing pull request.",
        "operationId": "update-pullrequest",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "Organization name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project name or ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repositoryId",
            "in": "path",
            "description": "Repository ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pullRequestId",
            "in": "path",
            "description": "Pull Request ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API version (e.g., 7.2-preview.2)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Basic Auth header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Pull request updates",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pullrequest.UpdatePullRequestReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated pull request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pullrequest.GitPullRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "pullRequest"
      }
    },
    "/api/{organization}/{project}/pipelines/pipelinepermissions/{resourceType}/{resourceId}": {
      "get": {
        "summary": "Get the pipeline permission of a resource",
        "description": "Get",
        "operationId": "get-pipelinepermission",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "Organization name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "Resource type (e.g., pipelines, repositories)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "Resource ID (e.g., pipeline ID, repository ID)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API version (e.g., 7.2-preview.1)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Basic Auth header (Basic <base64-encoded-username:password>)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pipeline permission details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pipelinepermission.ResourcePipelinePermissions"
                }
              }
            }
          }
        }
      }
    },
    "/api/{organization}/{project}/pipelines/{id}": {
      "get": {
        "summary": "Get a pipeline",
        "description": "Get",
        "operationId": "get-pipeline",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "Organization name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project name or ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API version (e.g., 7.2-preview.1)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Basic Auth header (Basic <base64-encoded-username:password>)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pipeline details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pipeline.GetPipelineResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Update a pipeline",
        "description": "Update a pipeline using build definitions endpoint",
        "operationId": "put-pipeline",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "Organization name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project name or ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Basic Auth header (Basic <base64-encoded-username:password>)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Pipeline update request body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pipeline.UpdatePipelineRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated pipeline details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pipeline.UpdatePipelineResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "pipelineUpdate"
      },
      "delete": {
        "summary": "Delete a pipeline",
        "description": "Delete a pipeline using build definitions endpoint",
        "operationId": "delete-pipeline",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "Organization name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project name or ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Basic Auth header (Basic <base64-encoded-username:password>)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - Pipeline deleted successfully",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "gitrepository.AzureDevOpsTime": {
        "type": "object",
        "properties": {
          "time.Time": {
            "type": "string"
          }
        }
      },
      "gitrepository.CreateRepositoryRequest": {
        "type": "object",
        "properties": {
          "defaultBranch": {
            "type": "string"
          },
          "initialize": {
            "type": "boolean",
            "description": "Indicates if the repository should be initialized with an initial commit"
          },
          "name": {
            "type": "string"
          },
          "parentRepository": {
            "$ref": "#/components/schemas/gitrepository.GitRepositoryRefMinimal"
          },
          "project": {
            "$ref": "#/components/schemas/gitrepository.TeamProjectReferenceMinimal"
          }
        }
      },
      "gitrepository.CreateRepositoryResponse": {
        "type": "object",
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/gitrepository.ReferenceLinks"
          },
          "creationDate": {
            "$ref": "#/components/schemas/gitrepository.AzureDevOpsTime"
          },
          "defaultBranch": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "isFork": {
            "type": "boolean"
          },
          "isInMaintenance": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "parentRepository": {
            "$ref": "#/components/schemas/gitrepository.GitRepositoryRef"
          },
          "project": {
            "$ref": "#/components/schemas/gitrepository.TeamProjectReference"
          },
          "remoteUrl": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "sshUrl": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "validRemoteUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webUrl": {
            "type": "string"
          }
        }
      },
      "gitrepository.GitRepositoryRef": {
        "type": "object",
        "properties": {
          "collection": {
            "$ref": "#/components/schemas/gitrepository.TeamProjectCollectionReference"
          },
          "id": {
            "type": "string"
          },
          "isFork": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/gitrepository.TeamProjectReference"
          },
          "remoteUrl": {
            "type": "string"
          },
          "sshUrl": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "gitrepository.GitRepositoryRefMinimal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/gitrepository.TeamProjectReferenceMinimal"
          }
        }
      },
      "gitrepository.ProjectState": {
        "type": "string",
        "enum": [
          "deleting",
          "new",
          "wellFormed",
          "createPending",
          "all",
          "unchanged",
          "deleted"
        ],
        "x-enum-varnames": [
          "ProjectStateDeleting",
          "ProjectStateNew",
          "ProjectStateWellFormed",
          "ProjectStateCreatePending",
          "ProjectStateAll",
          "ProjectStateUnchanged",
          "ProjectStateDeleted"
        ]
      },
      "gitrepository.ProjectVisibility": {
        "type": "string",
        "enum": [
          "private",
          "public"
        ],
        "x-enum-varnames": [
          "ProjectVisibilityPrivate",
          "ProjectVisibilityPublic"
        ]
      },
      "gitrepository.ReferenceLinks": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "gitrepository.TeamProjectCollectionReference": {
        "type": "object",
        "properties": {
          "avatarUrl": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "gitrepository.TeamProjectReference": {
        "type": "object",
        "properties": {
          "abbreviation": {
            "type": "string"
          },
          "defaultTeamImageUrl": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "lastUpdateTime": {
            "$ref": "#/components/schemas/gitrepository.AzureDevOpsTime"
          },
          "name": {
            "type": "string"
          },
          "revision": {
            "type": "integer"
          },
          "state": {
            "$ref": "#/components/schemas/gitrepository.ProjectState"
          },
          "url": {
            "type": "string"
          },
          "visibility": {
            "$ref": "#/components/schemas/gitrepository.ProjectVisibility"
          }
        }
      },
      "gitrepository.TeamProjectReferenceMinimal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "pipeline.BuildRepository": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Required"
          },
          "type": {
            "type": "string",
            "description": "Required - enum: unknown, gitHub, azureReposGit, azureReposGitHyphenated"
          }
        }
      },
      "pipeline.GetPipelineResponse": {
        "type": "object",
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/pipeline.ReferenceLinks"
          },
          "configuration": {
            "$ref": "#/components/schemas/pipeline.PipelineConfiguration"
          },
          "folder": {
            "type": "string",
            "description": "Embedded fields from PipelineBase"
          },
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "revision": {
            "type": "integer"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "pipeline.PipelineConfiguration": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "repository": {
            "type": "object",
            "description": "Required",
            "allOf": [
              {
                "$ref": "#/components/schemas/pipeline.BuildRepository"
              }
            ]
          },
          "type": {
            "type": "string",
            "description": "enum: unknown, yaml, designerJson, justInTime, designerHyphenJson"
          }
        }
      },
      "pipeline.PipelineConfigurationParameters": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "repository": {
            "type": "object",
            "description": "Required",
            "allOf": [
              {
                "$ref": "#/components/schemas/pipeline.BuildRepository"
              }
            ]
          },
          "type": {
            "type": "string",
            "description": "Required - enum: unknown, yaml, designerJson, justInTime, designerHyphenJson"
          }
        }
      },
      "pipeline.ReferenceLinks": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "pipeline.UpdatePipelineRequest": {
        "type": "object",
        "properties": {
          "configuration": {
            "$ref": "#/components/schemas/pipeline.PipelineConfigurationParameters"
          },
          "folder": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "description": "maybe to be removed since RDC does not include it"
          },
          "name": {
            "type": "string"
          },
          "revision": {
            "type": "integer"
          }
        }
      },
      "pipeline.UpdatePipelineResponse": {
        "type": "object",
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/pipeline.ReferenceLinks"
          },
          "configuration": {
            "$ref": "#/components/schemas/pipeline.PipelineConfiguration"
          },
          "folder": {
            "type": "string",
            "description": "Embedded fields from PipelineBase"
          },
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "revision": {
            "type": "integer"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "pipelinepermission.IdentityRef": {
        "type": "object",
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/pipelinepermission.ReferenceLinks"
          },
          "descriptor": {
            "type": "string"
          },
          "directoryAlias": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "inactive": {
            "type": "boolean"
          },
          "isAadIdentity": {
            "type": "boolean"
          },
          "isContainer": {
            "type": "boolean"
          },
          "isDeletedInOrigin": {
            "type": "boolean"
          },
          "profileUrl": {
            "type": "string"
          },
          "uniqueName": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "pipelinepermission.Permission": {
        "type": "object",
        "properties": {
          "authorized": {
            "type": "boolean"
          },
          "authorizedBy": {
            "$ref": "#/components/schemas/pipelinepermission.IdentityRef"
          },
          "authorizedOn": {
            "type": "string"
          }
        }
      },
      "pipelinepermission.PipelinePermission": {
        "type": "object",
        "properties": {
          "authorized": {
            "type": "boolean"
          },
          "authorizedBy": {
            "$ref": "#/components/schemas/pipelinepermission.IdentityRef"
          },
          "authorizedOn": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          }
        }
      },
      "pipelinepermission.ReferenceLinks": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "pipelinepermission.Resource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "pipelinepermission.ResourcePipelinePermissions": {
        "type": "object",
        "properties": {
          "allPipelines": {
            "$ref": "#/components/schemas/pipelinepermission.Permission"
          },
          "pipelines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pipelinepermission.PipelinePermission"
            }
          },
          "resource": {
            "$ref": "#/components/schemas/pipelinepermission.Resource"
          }
        }
      },
      "pullrequest.GitChange": {
        "type": "object",
        "properties": {
          "changeId": {
            "type": "integer"
          },
          "changeType": {
            "type": "string"
          },
          "item": {
            "type": "string"
          },
          "newContent": {
            "$ref": "#/components/schemas/pullrequest.ItemContent"
          },
          "newContentTemplate": {
            "$ref": "#/components/schemas/pullrequest.GitTemplate"
          },
          "originalPath": {
            "type": "string"
          },
          "sourceServerItem": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "pullrequest.GitCommitRef": {
        "type": "object",
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/pullrequest.ReferenceLinks"
          },
          "author": {
            "$ref": "#/components/schemas/pullrequest.GitUserDate"
          },
          "changeCounts": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          },
          "changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pullrequest.GitChange"
            }
          },
          "comment": {
            "type": "string"
          },
          "commentTruncated": {
            "type": "boolean"
          },
          "commitId": {
            "type": "string"
          },
          "committer": {
            "$ref": "#/components/schemas/pullrequest.GitUserDate"
          },
          "parents": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "remoteUrl": {
            "type": "string"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pullrequest.GitStatus"
            }
          },
          "url": {
            "type": "string"
          },
          "workItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pullrequest.ResourceRef"
            }
          }
        }
      },
      "pullrequest.GitForkRef": {
        "type": "object",
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/pullrequest.ReferenceLinks"
          },
          "creator": {
            "$ref": "#/components/schemas/pullrequest.IdentityRef"
          },
          "isLocked": {
            "type": "boolean"
          },
          "isLockedBy": {
            "$ref": "#/components/schemas/pullrequest.IdentityRef"
          },
          "name": {
            "type": "string"
          },
          "objectId": {
            "type": "string"
          },
          "peeledObjectId": {
            "type": "string"
          },
          "repository": {
            "$ref": "#/components/schemas/pullrequest.GitRepository"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pullrequest.GitStatus"
            }
          },
          "url": {
            "type": "string"
          }
        }
      },
      "pullrequest.GitPullRequest": {
        "type": "object",
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/pullrequest.ReferenceLinks"
          },
          "artifactId": {
            "type": "string"
          },
          "autoCompleteSetBy": {
            "$ref": "#/components/schemas/pullrequest.IdentityRef"
          },
          "closedBy": {
            "$ref": "#/components/schemas/pullrequest.IdentityRef"
          },
          "closedDate": {
            "type": "string"
          },
          "codeReviewId": {
            "type": "integer"
          },
          "commits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pullrequest.GitCommitRef"
            }
          },
          "completionOptions": {
            "$ref": "#/components/schemas/pullrequest.GitPullRequestCompletionOptions"
          },
          "completionQueueTime": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/pullrequest.IdentityRef"
          },
          "creationDate": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "forkSource": {
            "$ref": "#/components/schemas/pullrequest.GitForkRef"
          },
          "isDraft": {
            "type": "boolean"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pullrequest.WebApiTagDefinition"
            }
          },
          "lastMergeCommit": {
            "$ref": "#/components/schemas/pullrequest.GitCommitRef"
          },
          "lastMergeSourceCommit": {
            "$ref": "#/components/schemas/pullrequest.GitCommitRef"
          },
          "lastMergeTargetCommit": {
            "$ref": "#/components/schemas/pullrequest.GitCommitRef"
          },
          "mergeFailureMessage": {
            "type": "string"
          },
          "mergeFailureType": {
            "type": "string"
          },
          "mergeId": {
            "type": "string"
          },
          "mergeOptions": {
            "$ref": "#/components/schemas/pullrequest.GitPullRequestMergeOptions"
          },
          "mergeStatus": {
            "type": "string"
          },
          "pullRequestId": {
            "type": "integer"
          },
          "remoteUrl": {
            "type": "string"
          },
          "repository": {
            "$ref": "#/components/schemas/pullrequest.GitRepository"
          },
          "reviewers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pullrequest.IdentityRefWithVote"
            }
          },
          "sourceRefName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "supportsIterations": {
            "type": "boolean"
          },
          "targetRefName": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "workItemRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pullrequest.ResourceRef"
            }
          }
        }
      },
      "pullrequest.GitPullRequestCompletionOptions": {
        "type": "object",
        "properties": {
          "autoCompleteIgnoreConfigIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "bypassPolicy": {
            "type": "boolean"
          },
          "bypassReason": {
            "type": "string"
          },
          "deleteSourceBranch": {
            "type": "boolean"
          },
          "mergeCommitMessage": {
            "type": "string"
          },
          "mergeStrategy": {
            "type": "string"
          },
          "squashMerge": {
            "type": "boolean"
          },
          "transitionWorkItems": {
            "type": "boolean"
          },
          "triggeredByAutoComplete": {
            "type": "boolean"
          }
        }
      },
      "pullrequest.GitPullRequestMergeOptions": {
        "type": "object",
        "properties": {
          "conflictAuthorshipCommits": {
            "type": "boolean"
          },
          "detectRenameFalsePositives": {
            "type": "boolean"
          },
          "disableRenames": {
            "type": "boolean"
          }
        }
      },
      "pullrequest.GitRepository": {
        "type": "object",
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/pullrequest.ReferenceLinks"
          },
          "defaultBranch": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "isFork": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "parentRepository": {
            "$ref": "#/components/schemas/pullrequest.GitRepositoryRef"
          },
          "project": {
            "$ref": "#/components/schemas/pullrequest.TeamProjectReference"
          },
          "remoteUrl": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "sshUrl": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "webUrl": {
            "type": "string"
          }
        }
      },
      "pullrequest.GitRepositoryRef": {
        "type": "object",
        "properties": {
          "collection": {
            "$ref": "#/components/schemas/pullrequest.TeamProjectCollectionReference"
          },
          "id": {
            "type": "string"
          },
          "isFork": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/pullrequest.TeamProjectReference"
          },
          "remoteUrl": {
            "type": "string"
          },
          "sshUrl": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "pullrequest.GitStatus": {
        "type": "object",
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/pullrequest.ReferenceLinks"
          },
          "context": {
            "$ref": "#/components/schemas/pullrequest.GitStatusContext"
          },
          "createdBy": {
            "$ref": "#/components/schemas/pullrequest.IdentityRef"
          },
          "creationDate": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "state": {
            "type": "string"
          },
          "targetUrl": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          }
        }
      },
      "pullrequest.GitStatusContext": {
        "type": "object",
        "properties": {
          "genre": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "pullrequest.GitTemplate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "pullrequest.GitUserDate": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "pullrequest.IdentityRef": {
        "type": "object",
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/pullrequest.ReferenceLinks"
          },
          "descriptor": {
            "type": "string"
          },
          "directoryAlias": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "inactive": {
            "type": "boolean"
          },
          "isAadIdentity": {
            "type": "boolean"
          },
          "isContainer": {
            "type": "boolean"
          },
          "isDeletedInOrigin": {
            "type": "boolean"
          },
          "profileUrl": {
            "type": "string"
          },
          "uniqueName": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "pullrequest.IdentityRefWithVote": {
        "type": "object",
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/pullrequest.ReferenceLinks"
          },
          "descriptor": {
            "type": "string"
          },
          "directoryAlias": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "hasDeclined": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "inactive": {
            "type": "boolean"
          },
          "isAadIdentity": {
            "type": "boolean"
          },
          "isContainer": {
            "type": "boolean"
          },
          "isDeletedInOrigin": {
            "type": "boolean"
          },
          "isFlagged": {
            "type": "boolean"
          },
          "isReapprove": {
            "type": "boolean"
          },
          "isRequired": {
            "type": "boolean"
          },
          "profileUrl": {
            "type": "string"
          },
          "reviewerUrl": {
            "type": "string"
          },
          "uniqueName": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "vote": {
            "type": "integer"
          }
        }
      },
      "pullrequest.ItemContent": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          }
        }
      },
      "pullrequest.ReferenceLinks": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "pullrequest.ResourceRef": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "pullrequest.TeamProjectCollectionReference": {
        "type": "object",
        "properties": {
          "avatarUrl": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "pullrequest.TeamProjectReference": {
        "type": "object",
        "properties": {
          "abbreviation": {
            "type": "string"
          },
          "defaultTeamImageUrl": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "lastUpdateTime": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "revision": {
            "type": "integer"
          },
          "state": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "visibility": {
            "type": "string"
          }
        }
      },
      "pullrequest.UpdatePullRequestReq": {
        "type": "object",
        "properties": {
          "completionOptions": {
            "$ref": "#/components/schemas/pullrequest.GitPullRequestCompletionOptions"
          },
          "description": {
            "type": "string"
          },
          "mergeOptions": {
            "$ref": "#/components/schemas/pullrequest.GitPullRequestMergeOptions"
          },
          "status": {
            "type": "string"
          },
          "targetRefName": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "pullrequest.WebApiTagDefinition": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "x-original-swagger-version": "2.0"
}
